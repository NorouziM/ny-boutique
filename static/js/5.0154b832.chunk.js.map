{"version":3,"sources":["components/ProductPreview.js","redux/shopActions.js","pages/Category.jsx"],"names":["connect","dispatch","addItem","item","props","name","price","imageUrl","console","log","className","style","backgroundImage","onClick","FetchShopDataAsync","dipatch","db","collection","onSnapshot","snapShot","a","products","docs","map","category","data","type","payload","Category","this","isLoading","size","SHOP_DATA","routeName","match","params","items","product","React","Component","withRouter","shop"],"mappings":"mJAwCeA,gBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAUF,EAASC,YAAQC,QAGvBH,EApCQ,SAACI,GAAW,IAAD,EACEA,EAAMD,KAAhCE,EADwB,EACxBA,KAAMC,EADkB,EAClBA,MAAOC,EADW,EACXA,SACbL,EAAYE,EAAZF,QAER,OADAM,QAAQC,IAAIL,GAEV,8BACE,sBAAKM,UAAU,kEAAf,UACE,qBACEC,MAAO,CAAEC,gBAAgB,OAAD,OAASL,IACjCG,UAAU,oEAEZ,sBAAKA,UAAU,oEAAf,UACE,qBAAKA,UAAU,mEAAf,SACGL,IAEH,sBAAKK,UAAU,0DAAf,UACE,qBAAIA,UAAU,2BAAd,cAA2CJ,KAC3C,wBACEO,QAAS,WACPX,EAAQE,EAAMD,OAEhBO,UAAU,6FAJZ,wC,uGCZCI,EAAqB,kBAAM,SAACC,GACjBC,IAAGC,WAAW,eACtBC,WAAd,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,sDACjBC,EAAWF,EAASG,KAAKC,KAAI,SAACC,GAAD,OAAcA,EAASC,UAC1DV,EAZyC,CAC3CW,KAAM,gBACNC,QAUsBN,IACpBN,EATuC,CACzCW,KAAM,4BAKmB,2CAAzB,0D,0ICHIE,E,kLAGFC,KAAKzB,MAAMU,uB,+BAEH,IAAD,OACL,OACA,8BACIe,KAAKzB,MAAM0B,UAAa,cAAC,IAAD,CAASC,KAAM,KACzC,qBAAKrB,UAAU,6BAAf,SACE,qBAAKA,UAAU,+DAAf,SAGAmB,KAAKzB,MAAM4B,UAAUT,KAAI,SAACpB,GACpB,OAAIA,EAAK8B,YAAc,EAAK7B,MAAM8B,MAAMC,OAAOX,SACxCrB,EAAKiC,MAAMb,KAAI,SAAAc,GAAO,OAAI,cAAC,IAAD,CAAgBlC,KAAMkC,OAC3C,kB,GAhBLC,IAAMC,WAmCdC,sBAAWxC,aAPF,SAAC,GAAD,QAAEyC,KAAF,MAAmC,CACvDT,UADoB,EAAQA,UAE5BF,UAFoB,EAAkBA,cAIf,SAAC7B,GAAD,MAAe,CACxCa,mBAAoB,kBAAMb,EAASa,mBAEXd,CAA4C4B","file":"static/js/5.0154b832.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"./../redux/cartActions\";\r\n\r\nconst ProductPreview = (props) => {\r\n  const { name, price, imageUrl } = props.item;\r\n  const { addItem } = props;\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-col justify-center items-center max-w-sm mx-auto my-8\">\r\n        <div\r\n          style={{ backgroundImage: `url(${imageUrl}` }}\r\n          className=\"bg-gray-300 h-64 w-full rounded-lg shadow-md bg-cover bg-center\"\r\n        ></div>\r\n        <div className=\"w-56 md:w-64 bg-white -mt-10 shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"py-2 text-center font-bold uppercase tracking-wide text-gray-800\">\r\n            {name}\r\n          </div>\r\n          <div className=\"flex items-center justify-between py-2 px-3 bg-gray-300\">\r\n            <h1 className=\"text-gray-800 font-bold \">${price}</h1>\r\n            <button\r\n              onClick={() => {\r\n                addItem(props.item);\r\n              }}\r\n              className=\"bg-gray-700 text-xs text-white px-2 py-1 font-semibold rounded uppercase hover:bg-gray-700\"\r\n            >\r\n              Add to cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductPreview);\r\n","import { db } from \"../firebase.util\";\r\nexport const setShopData = (collections) => ({\r\n  type: \"SET_SHOP_DATA\",\r\n  payload: collections,\r\n});\r\nexport const fetchShopDataSuccess = () => ({\r\n  type: \"FETCH_SHOP_DATA_SUCCESS\",\r\n});\r\n\r\nexport const FetchShopDataAsync = () => (dipatch) => {\r\n  const collectionRef = db.collection(\"collections\");\r\n  collectionRef.onSnapshot(async (snapShot) => {\r\n    const products = snapShot.docs.map((category) => category.data());\r\n    dipatch(setShopData(products));\r\n    dipatch(fetchShopDataSuccess());\r\n  });\r\n};\r\n","import React from 'react'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { connect } from 'react-redux'\r\nimport ProductPreview from '../components/ProductPreview';\r\n\r\nimport { FetchShopDataAsync} from \"../redux/shopActions\";\r\nimport { Spinner } from '../components/Spinner';\r\n\r\nclass Category extends React.Component {\r\n \r\n  componentDidMount() {\r\n    this.props.FetchShopDataAsync();\r\n }\r\n  render() {\r\n      return(\r\n      <div>\r\n        { this.props.isLoading  ? <Spinner size={28} /> : \r\n        <div className=\"mx-auto text-center mt-32 \">\r\n          <div className=\"grid flex lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 px-7\">\r\n        {\r\n          \r\n          this.props.SHOP_DATA.map((item) => {\r\n                if (item.routeName === this.props.match.params.category)\r\n                return item.items.map(product => <ProductPreview item={product} />   )\r\n                else return null;\r\n            })\r\n        }\r\n        </div>\r\n        </div>\r\n        }\r\n      </div>\r\n      \r\n\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({shop:{SHOP_DATA,isLoading}}) => ({\r\n    SHOP_DATA,\r\n    isLoading\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  FetchShopDataAsync: () => dispatch(FetchShopDataAsync())\r\n})\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Category))\r\n"],"sourceRoot":""}