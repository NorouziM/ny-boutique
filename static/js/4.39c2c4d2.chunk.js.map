{"version":3,"sources":["components/ProductPreview.js","redux/shopActions.js","components/CollectionPreview.js","pages/Shop.jsx"],"names":["connect","dispatch","addItem","item","props","name","price","imageUrl","className","style","backgroundImage","onClick","FetchShopDataAsync","dipatch","db","collection","onSnapshot","snapShot","a","products","docs","map","category","data","type","payload","CollectionPreview","title","items","routeName","to","process","filter","_item","index","Shop","this","isLoading","size","SHOP_DATA","id","React","Component","shop"],"mappings":"mJAuCeA,gBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAUF,EAASC,YAAQC,QAGvBH,EAnCQ,SAACI,GAAW,IAAD,EACEA,EAAMD,KAAhCE,EADwB,EACxBA,KAAMC,EADkB,EAClBA,MAAOC,EADW,EACXA,SACbL,EAAYE,EAAZF,QACR,OACE,8BACE,sBAAKM,UAAU,kEAAf,UACE,qBACEC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,IACjCC,UAAU,oEAEZ,sBAAKA,UAAU,oEAAf,UACE,qBAAKA,UAAU,mEAAf,SACGH,IAEH,sBAAKG,UAAU,0DAAf,UACE,qBAAIA,UAAU,2BAAd,cAA2CF,KAC3C,wBACEK,QAAS,WACPT,EAAQE,EAAMD,OAEhBK,UAAU,6FAJZ,wC,uGCXCI,EAAqB,kBAAM,SAACC,GACjBC,IAAGC,WAAW,eACtBC,WAAd,uCAAyB,WAAOC,GAAP,eAAAC,EAAA,sDACjBC,EAAWF,EAASG,KAAKC,KAAI,SAACC,GAAD,OAAcA,EAASC,UAC1DV,EAZyC,CAC3CW,KAAM,gBACNC,QAUsBN,IACpBN,EATuC,CACzCW,KAAM,4BAKmB,2CAAzB,0D,kECYaE,IAnBf,YAAyD,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UACzC,OACE,gCACE,qBAAKrB,UAAU,6BAAf,SACE,cAAC,IAAD,CAAMsB,GAAIC,eAAA,gBAAkCF,GAA5C,SACE,oBAAIrB,UAAU,sBAAd,SAAqCmB,QAGzC,qBAAKnB,UAAU,+DAAf,SACGoB,EACEI,QAAO,SAACC,EAAOC,GAAR,OAAkBA,EAAQ,KACjCb,KAAI,SAAClB,GACJ,OAAO,cAAC,IAAD,CAAgBA,KAAMA,c,kICPnCgC,E,kLAEAC,KAAKhC,MAAMQ,uB,+BAIT,OACA,8BACIwB,KAAKhC,MAAMiC,UACT,cAAC,IAAD,CAASC,KAAM,KACfF,KAAKhC,MAAMmC,UAAUlB,KAAI,YAAkC,IAAhCM,EAA+B,EAA/BA,MAAMC,EAAyB,EAAzBA,MAAMY,EAAmB,EAAnBA,GAAGX,EAAgB,EAAhBA,UAC1C,OAAO,cAAC,IAAD,CAA4BF,MAAOA,EAAOE,UAAWA,EAAWD,MAAOA,GAA/CY,Y,GAX1BC,IAAMC,WA0BV1C,uBAJS,SAAC,GAAD,QAAE2C,KAAF,MAAmC,CACzDJ,UADsB,EAAQA,UAE9BF,UAFsB,EAAkBA,cAHf,SAACpC,GAAD,MAAe,CACxCW,mBAAoB,kBAAMX,EAASW,mBAMtBZ,CAA4CmC","file":"static/js/4.39c2c4d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"./../redux/cartActions\";\r\n\r\nconst ProductPreview = (props) => {\r\n  const { name, price, imageUrl } = props.item;\r\n  const { addItem } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-col justify-center items-center max-w-sm mx-auto my-8\">\r\n        <div\r\n          style={{ backgroundImage: `url(${imageUrl}` }}\r\n          className=\"bg-gray-300 h-64 w-full rounded-lg shadow-md bg-cover bg-center\"\r\n        ></div>\r\n        <div className=\"w-56 md:w-64 bg-white -mt-10 shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"py-2 text-center font-bold uppercase tracking-wide text-gray-800\">\r\n            {name}\r\n          </div>\r\n          <div className=\"flex items-center justify-between py-2 px-3 bg-gray-300\">\r\n            <h1 className=\"text-gray-800 font-bold \">${price}</h1>\r\n            <button\r\n              onClick={() => {\r\n                addItem(props.item);\r\n              }}\r\n              className=\"bg-gray-700 text-xs text-white px-2 py-1 font-semibold rounded uppercase hover:bg-gray-700\"\r\n            >\r\n              Add to cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductPreview);\r\n","import { db } from \"../firebase.util\";\r\nexport const setShopData = (collections) => ({\r\n  type: \"SET_SHOP_DATA\",\r\n  payload: collections,\r\n});\r\nexport const fetchShopDataSuccess = () => ({\r\n  type: \"FETCH_SHOP_DATA_SUCCESS\",\r\n});\r\n\r\nexport const FetchShopDataAsync = () => (dipatch) => {\r\n  const collectionRef = db.collection(\"collections\");\r\n  collectionRef.onSnapshot(async (snapShot) => {\r\n    const products = snapShot.docs.map((category) => category.data());\r\n    dipatch(setShopData(products));\r\n    dipatch(fetchShopDataSuccess());\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport ProductPreview from \"./ProductPreview\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CollectionPreview({ title, items, routeName }) {\r\n  return (\r\n    <div>\r\n      <div className=\"mx-auto text-center mt-32 \">\r\n        <Link to={process.env.PUBLIC_URL + `/shop/${routeName}`}>\r\n          <h1 className=\"text-4xl mb-12 mt-4\">{title}</h1>\r\n        </Link>\r\n      </div>\r\n      <div className=\"grid flex lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 px-7\">\r\n        {items\r\n          .filter((_item, index) => index < 4)\r\n          .map((item) => {\r\n            return <ProductPreview item={item} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollectionPreview;\r\n","import React from 'react';\r\n\r\nimport CollectionPreview from \"../components/CollectionPreview\"\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport {FetchShopDataAsync} from \"../redux/shopActions\";\r\nimport { Spinner } from '../components/Spinner';\r\n\r\nclass Shop extends React.Component {\r\n     componentDidMount() {\r\n      this.props.FetchShopDataAsync();\r\n     }\r\n    render() { \r\n  \r\n        return ( \r\n        <div>\r\n          { this.props.isLoading\r\n            ? <Spinner size={28}/>\r\n            : this.props.SHOP_DATA.map(({title,items,id,routeName }) => {\r\n              return <CollectionPreview key={id} title={title} routeName={routeName} items={items} />\r\n            })\r\n          }\r\n            \r\n        </div> );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  FetchShopDataAsync: () => dispatch(FetchShopDataAsync())\r\n})\r\nconst mapStateToProps = ({shop:{SHOP_DATA,isLoading}}) => ({\r\n  SHOP_DATA,\r\n  isLoading\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Shop)"],"sourceRoot":""}